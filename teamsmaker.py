import pandas as pd
import numpy as np
import itertools
import random


# Fetching teams from the csv files
left_team = pd.read_csv('left_gang.csv')
right_team = pd.read_csv('right_gang.csv')

# Dividing groups
t1 = left_team.iloc[:2].reset_index(drop=True)
t2 = right_team.iloc[:2].reset_index(drop=True)
m1 = left_team.iloc[2:4].reset_index(drop=True)
m2 = right_team.iloc[2:4].reset_index(drop=True)
l1 = left_team.iloc[4:5].reset_index(drop=True)
l2 = right_team.iloc[4:5].reset_index(drop=True)
b1 = left_team.iloc[5:].reset_index(drop=True)
b2 = right_team.iloc[5:].reset_index(drop=True)

# left gang
t1m1 = pd.concat([t1, m1], axis=0, ignore_index=True)
t1l1 = pd.concat([t1, l1], axis=0, ignore_index=True)
m1l1 = pd.concat([m1, l1], axis=0, ignore_index=True)


# right gang
t2m2 = pd.concat([t2, m2], axis=0, ignore_index=True)
t2l2 = pd.concat([t2, l2], axis=0, ignore_index=True)
m2l2 = pd.concat([m2, l2], axis=0, ignore_index=True)


# definig name to random generated combos of team


def randomTeams(dfs, combo):
    data = []

    for i in combo:
        df = dfs.iloc[list(i)]
        data.append(df)

    return data


def team_maker(team_type=None):

    # left gang combos
    combo_1_1 = []  # combo of l1
    combo_1_2 = list(itertools.combinations(t1l1.index, 1))
    combo_1_3 = list(itertools.combinations(m1l1.index, 1))

    # left gang combos
    combo_2_1 = []  # combo of l2
    combo_2_2 = list(itertools.combinations(t2l2.index, 1))
    combo_2_3 = list(itertools.combinations(m2l2.index, 1))

    # left gang bowler combos
    bowler_1_1 = list(itertools.combinations(b1.index, 1))
    bowler_1_2 = list(itertools.combinations(b1.index, 2))
    bowler_1_3 = list(itertools.combinations(b1.index, 3))
    bowler_1_4 = list(itertools.combinations(b1.index, 4))

    # right gang bowler combos
    bowler_2_1 = list(itertools.combinations(b2.index, 1))
    bowler_2_2 = list(itertools.combinations(b2.index, 2))
    bowler_2_3 = list(itertools.combinations(b2.index, 3))
    bowler_2_4 = list(itertools.combinations(b2.index, 4))

    # team - 1 t1m1 combos
    t1_player_index = []
    m1_player_index = []
    for i in t1.index:
        for j in m1.index:
            t1_player_index.append((i,))
            m1_player_index.append((j,))

    t2_player_index = []
    m2_player_index = []
    for i in t1.index:
        for j in m1.index:
            t2_player_index.append((i,))
            m2_player_index.append((j,))

    # left gang team names genrated by the function
    teams = [
        randomTeams(t1m1,  combo_1_1),  # useless
        randomTeams(t1l1,  combo_1_2),
        randomTeams(m1l1,  combo_1_3),
    ]

    # right gang team names genrated by the function
    teams2 = [
        randomTeams(t2m2,  combo_2_1),  # useless
        randomTeams(t2l2,  combo_2_2),
        randomTeams(m2l2,  combo_2_3),
    ]

    # lower teams combination names generated by the function
    t1m2_combo_lower = [
        randomTeams(t1, t1_player_index),
        randomTeams(m1, m1_player_index),
        randomTeams(t2, t2_player_index),
        randomTeams(m2, m2_player_index),
    ]

    # making both side "5" or lower combos
    for i in range(4):
        temp = pd.concat(
            [t1m2_combo_lower[0][i], t1m2_combo_lower[1][i]], ignore_index=True)
        combo_1_1.append(temp)

    for i in range(4):
        temp = pd.concat(
            [t1m2_combo_lower[2][i], t1m2_combo_lower[3][i]], ignore_index=True)
        combo_2_1.append(temp)

    # left gang team bowler names genrated by the function
    bowler_1 = [
        randomTeams(b1, bowler_1_1),
        randomTeams(b1, bowler_1_2),
        randomTeams(b1, bowler_1_3),
        randomTeams(b1, bowler_1_4),
    ]

    # right gang team bowler names genrated by the function
    bowler_2 = [
        randomTeams(b2, bowler_2_1),
        randomTeams(b2, bowler_2_2),
        randomTeams(b2, bowler_2_3),
        randomTeams(b2, bowler_2_4),
    ]

    # different bowler combinations
    # 1-4
    bowler_combo_1 = []
    # 2-3
    bowler_combo_2 = []
    # 3-2
    bowler_combo_3 = []
    # 4-1
    bowler_combo_4 = []

    # making all random bowler combos and appending them to the lists
    for i in bowler_1[0]:
        for j in bowler_2[3]:
            temp = pd.concat([i, j], ignore_index=True)
            bowler_combo_1.append(temp)

    for i in bowler_1[1]:
        for j in bowler_2[2]:
            temp = pd.concat([i, j], ignore_index=True)
            bowler_combo_2.append(temp)

    for i in bowler_1[2]:
        for j in bowler_2[1]:
            temp = pd.concat([i, j], ignore_index=True)
            bowler_combo_3.append(temp)

    for i in bowler_1[3]:
        for j in bowler_2[0]:
            temp = pd.concat([i, j], ignore_index=True)
            bowler_combo_4.append(temp)

    # taking random combination from both 24 24 combos to make 48 -> 50
    random_item_1 = []
    random_item_1.append( random.choice(bowler_combo_2))
    random_item_2 = []
    random_item_2.append( random.choice(bowler_combo_3))


    bowler_combo_2_n_1 = bowler_combo_2 + random_item_1
    bowler_combo_3_n_1 = bowler_combo_3 + random_item_1

    # the final bowlers list
    final_bowler_list = bowler_combo_2_n_1+bowler_combo_3_n_1 + \
        bowler_combo_2_n_1+bowler_combo_3_n_1

    # suffleing the 100 bowlers combos for 10 times
    for i in range(10):
        random.shuffle(final_bowler_list)

    # specify the lengths of the sublists
    sublist_lengths = [9, 9, 12, 9, 9, 12, 12, 12, 16]

    # create an empty list to hold the list of bowlers
    all_bowlers_combo = []

    # initialize the start index for slicing
    start_index = 0

    # iterate over the sublist lengths and extract sublists from the original list
    for length in sublist_lengths:
        # compute the end index for slicing
        end_index = start_index + length
        # slice the original list to get the sublist
        sublist = final_bowler_list[start_index:end_index]
        # add the sublist to the list of sublists
        all_bowlers_combo.append(sublist)
        # update the start index for the next iteration
        start_index = end_index
  


# making teams as per the combinations
    if team_type == "t1t2":
        # making both side combinations
        # ex 1  1
        #    2  2
        #    3  4
        team_1_combo = []
        team_2_combo = []
        for i in teams[2]:
            temp = pd.concat([t1, i], ignore_index=True)
            team_1_combo.append(temp)
        for i in teams2[2]:
            temp = pd.concat([t2, i], ignore_index=True)
            team_2_combo.append(temp)

        # combining both teams
        # ex 1
        #    2
        #    3
        #    1
        #    2
        #    4
        n = 0
        final_team = []
        for i in team_1_combo:
            for j in team_2_combo:
                bowler_list = all_bowlers_combo[0][n]
                temp = pd.concat([i, j, bowler_list], ignore_index=True)
                final_team.append(temp)
                n += 1

        # returning the new df
        return pd.concat(final_team, axis=1)

    if team_type == "t1m2":
        team_1_combo = []
        team_2_combo = []
        for i in teams[2]:
            temp = pd.concat([t1, i], ignore_index=True)
            team_1_combo.append(temp)
        for i in teams2[1]:
            temp = pd.concat([m2, i], ignore_index=True)
            team_2_combo.append(temp)
        n = 0
        final_team = []
        for i in team_1_combo:
            for j in team_2_combo:
                bowler_list = all_bowlers_combo[1][n]
                temp = pd.concat([i, j, bowler_list], ignore_index=True)
                final_team.append(temp)
                n += 1

        return pd.concat(final_team, axis=1)

    if team_type == "t1l2":
        team_1_combo = []
        team_2_combo = []
        for i in teams[2]:
            temp = pd.concat([t1, i], ignore_index=True)
            team_1_combo.append(temp)
        for i in combo_2_1:
            temp = pd.concat([i, l2], ignore_index=True)
            team_2_combo.append(temp)

        n = 0
        final_team = []
        for i in team_1_combo:
            for j in team_2_combo:
                bowler_list = all_bowlers_combo[2][n]
                temp = pd.concat([i, j, bowler_list], ignore_index=True)
                final_team.append(temp)
                n += 1

        return pd.concat(final_team, axis=1)

    if team_type == "m1t2":
        team_1_combo = []
        team_2_combo = []
        for i in teams[1]:
            temp = pd.concat([m1, i], ignore_index=True)
            team_1_combo.append(temp)
        for i in teams2[2]:
            temp = pd.concat([t2, i], ignore_index=True)
            team_2_combo.append(temp)

        n = 0
        final_team = []
        for i in team_1_combo:
            for j in team_2_combo:
                bowler_list = all_bowlers_combo[3][n]
                temp = pd.concat([i, j, bowler_list], ignore_index=True)
                final_team.append(temp)
                n += 1

        return pd.concat(final_team, axis=1)

    if team_type == "m1m2":
        team_1_combo = []
        team_2_combo = []
        for i in teams[1]:
            temp = pd.concat([m1, i], ignore_index=True)
            team_1_combo.append(temp)
        for i in teams2[1]:
            temp = pd.concat([m2, i], ignore_index=True)
            team_2_combo.append(temp)
        n = 0
        final_team = []
        for i in team_1_combo:
            for j in team_2_combo:
                bowler_list = all_bowlers_combo[4][n]
                temp = pd.concat([i, j, bowler_list], ignore_index=True)
                final_team.append(temp)
                n += 1

        return pd.concat(final_team, axis=1)

    if team_type == "m1l2":
        team_1_combo = []
        team_2_combo = []
        for i in teams[1]:
            temp = pd.concat([m1, i], ignore_index=True)
            team_1_combo.append(temp)
        for i in combo_2_1:
            temp = pd.concat([i, l2], ignore_index=True)
            team_2_combo.append(temp)
        n = 0
        final_team = []
        for i in team_1_combo:
            for j in team_2_combo:
                bowler_list = all_bowlers_combo[5][n]
                temp = pd.concat([i, j, bowler_list], ignore_index=True)
                final_team.append(temp)
                n += 1

        return pd.concat(final_team, axis=1)

    if team_type == "l1t2":
        team_1_combo = []
        team_2_combo = []
        for i in combo_1_1:
            temp = pd.concat([i, l1], ignore_index=True)
            team_1_combo.append(temp)
        for i in teams2[2]:
            temp = pd.concat([t2, i], ignore_index=True)
            team_2_combo.append(temp)

        n = 0
        final_team = []
        for i in team_1_combo:
            for j in team_2_combo:
                bowler_list = all_bowlers_combo[6][n]
                temp = pd.concat([i, j, bowler_list], ignore_index=True)
                final_team.append(temp)
                n += 1

        return pd.concat(final_team, axis=1)

    if team_type == "l1m2":
        team_1_combo = []
        team_2_combo = []
        for i in combo_1_1:
            temp = pd.concat([i, l1], ignore_index=True)
            team_1_combo.append(temp)
        for i in teams2[1]:
            temp = pd.concat([m2, i], ignore_index=True)
            team_2_combo.append(temp)

        n = 0
        final_team = []
        for i in team_1_combo:
            for j in team_2_combo:
                bowler_list = all_bowlers_combo[7][n]
                temp = pd.concat([i, j, bowler_list], ignore_index=True)
                final_team.append(temp)
                n += 1

        return pd.concat(final_team, axis=1)

    if team_type == "l1l2":
        team_1_combo = []
        team_2_combo = []
        for i in combo_1_1:
            temp = pd.concat([i, l1], ignore_index=True)
            team_1_combo.append(temp)
        for i in combo_2_1:
            temp = pd.concat([i, l2], ignore_index=True)
            team_2_combo.append(temp)

        n = 0
        final_team = []
        for i in team_1_combo:
            for j in team_2_combo:
                bowler_list = all_bowlers_combo[8][n]
                temp = pd.concat([i, j, bowler_list], ignore_index=True)
                final_team.append(temp)
                n += 1

        return pd.concat(final_team, axis=1)





team = ["t1t2", "t1m2", "t1l2",
        "m1t2", "m1m2", "m1l2",
        "l1t2", "l1m2", "l1l2",]

for i in range(len(team)):
    team_maker(team[i]).to_csv(
        f"teams/{team[i]}.csv", index=False, header=False)
